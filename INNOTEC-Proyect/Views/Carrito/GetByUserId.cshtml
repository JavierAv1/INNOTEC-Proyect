@using System.Security.Claims
@model List<ML.Compra>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Lista de Compras";
}
@section Styles {
    <link rel="stylesheet" href="~/css/stylecarrito.css" asp-append-version="true" />
}

<div class="container">
    <div class="row">
        <div class="col-lg-8">
            @foreach (var item in Model)
            {
                <div class="row mb-3 p-2 bg-white border rounded">
                    <div class="col-md-2 mt-1">
                        @if (item.IdproductoNavigation?.ImagenDelProducto != null)
                        {
                            <img class="img-fluid img-responsive rounded product-image" src="data:image/jpeg;base64,@Convert.ToBase64String(item.IdproductoNavigation?.ImagenDelProducto)" alt="@item.IdproductoNavigation?.Nombre">
                        }
                        else
                        {
                            <img src="~/Images/no-image-available.png" alt="No image available" class="img-responsive" />
                        }
                    </div>
                    <div class="col-md-6 mt-1">
                        <h5>@item.IdproductoNavigation?.Nombre</h5>
                        <div class="d-flex flex-row">
                            <div class="ratings mr-2"><i class="fa fa-star"></i></div><span>@item.FechaDeCompra?.ToString("yyyy-MM-dd")</span>
                        </div>
                        <p class="text-justify text-truncate para mb-0">@item.IdproductoNavigation?.DescripcionDelProducto</p>
                    </div>
                    <div class="col-md-4 align-items-center align-content-center">
                        <div class="d-flex flex-row align-items-center">
                            <h4 class="mr-1">$@(item.IdproductoNavigation?.Precio * item.Cantidad)</h4>

                        </div>
                        <div class="d-flex flex-column mt-4">
                            <input type="hidden" class="form-control idusuario" value="@User.FindFirstValue("UserId")" />
                            <input type="hidden" class="form-control idproducto" value="@item.Idproducto" />
                            <input type="hidden" class="form-control idcompra" value="@item.IdCompra" />
                            <input type="number" class="form-control mb-2 cantidad" value="@item.Cantidad" data-id="@item.IdCompra" min="1" />
                            <button class="btn btn-outline-danger btn-sm eliminar-btn" type="button" data-id="@item.IdCompra">Eliminar</button>
                            <button class="btn btn-outline-primary btn-sm mt-2 comprar-btn" type="button" data-id="@item.IdCompra" data-total=@(item.IdproductoNavigation?.Precio * item.Cantidad)>Comprar ahora</button>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Resumen de compra</h5>
                    <p class="card-text">Total productos: @Model.Count</p>
                    <p class="card-text">Envío: Gratis</p>
                    <p class="card-text">Total: $<span id="total-compra">@Model.Sum(item => item.IdproductoNavigation?.Precio * item.Cantidad)</span></p>
                    <button id="continuar-compra" class="btn btn-primary btn-block">Continuar compra</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.cantidad').on('change', function () {
                var id = $(this).data('id');
                var cantidad = $(this).val();
                var idusuario = $(this).closest('.d-flex').find('.idusuario').val();
                var idproducto = $(this).closest('.d-flex').find('.idproducto').val();
                var idcompra = $(this).closest('.d-flex').find('.idcompra').val();

                var compra = {
                    IdCompra: parseInt(idcompra),
                    Cantidad: parseInt(cantidad),
                    Idusuario: parseInt(idusuario),
                    Idproducto: parseInt(idproducto),
                    FechaDeCompra: new Date().toISOString().split('T')[0], // Fecha actual
                    FechaVencimiento: new Date(new Date().setMonth(new Date().getMonth() + 1)).toISOString().split('T')[0] // Un mes después
                };

                $.ajax({
                    url: '/Carrito/Update',
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(compra),
                    success: function (response) {
                        if (response.success) {
                            location.reload(); // Recarga la página para actualizar los datos
                        } else {
                            alert('Error al actualizar la cantidad: ' + response.errorMessage);
                        }
                    },
                    error: function (xhr) {
                        var errorMessage = xhr.responseJSON ? xhr.responseJSON.message : 'Error desconocido';
                        alert('Error al actualizar la cantidad: ' + errorMessage);
                    }
                });
            });

            $('.eliminar-btn').on('click', function () {
                var id = $(this).data('id');

                $.ajax({
                    url: '/Carrito/Delete/' + id,
                    type: 'DELETE',
                    success: function (response) {
                        if (response.success) {
                            location.reload(); // Recarga la página para actualizar la lista
                        } else {
                            alert('Error al eliminar el producto: ' + response.errorMessage);
                        }
                    },
                    error: function (xhr) {
                        var errorMessage = xhr.responseJSON ? xhr.responseJSON.message : 'Error desconocido';
                        alert('Error al eliminar el producto: ' + errorMessage);
                    }
                });
            });

            $('.comprar-btn').on('click', function () {
                var idCompra = $(this).data('id');
                var total = $(this).data('total');
                var url = '/Envio/Index?idCompra=' + encodeURIComponent(idCompra) + '&total=' + encodeURIComponent(total);
                window.location.href = url;
            });

            $('#continuar-compra').on('click', function () {
                var idsCompra = [];
                var totalCompra = 0;

                $('.idcompra').each(function () {
                    idsCompra.push($(this).val());
                });

                totalCompra = parseFloat($('#total-compra').text());

                var url = '/Envio/Index?idsCompra=' + encodeURIComponent(idsCompra.join(',')) + '&total=' + encodeURIComponent(totalCompra);
                window.location.href = url;
            });
        });
    </script>
}
